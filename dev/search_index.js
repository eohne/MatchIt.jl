var documenterSearchIndex = {"docs":
[{"location":"AllFunctions/#All-Functions","page":"All Functions","title":"All Functions","text":"","category":"section"},{"location":"AllFunctions/","page":"All Functions","title":"All Functions","text":"Modules = [MatchIt]","category":"page"},{"location":"AllFunctions/#Base.summary","page":"All Functions","title":"Base.summary","text":"Base.summary(obj::MatchedIt,test::Bool=false,pre::Bool=false)\n\nGives a summary output for the matched sample.   The output includes:\n\nA summary of the number of observations matched \nA table of the means of all variables in the original and matched dataframe split into treatment and control group. \nIf test=true a p-value of a 2 sample Welch test is reported for each variable used in the matching.\n\nArguments:\n\nobj::MatchedIt: The output from a call to matchit\ntest::Bool: Whether a difference in mean test (2 sample Welch test) should be performed between treatment and control observations. (defaults to false)\npre::Bool: Whether to also show the output of the means and T-tests for the sample before matching.\n\nExample\n\njulia> m = matchit(input_data, @formula(treat ~ age + educ + race + nodegree + re74 + re75));\n\njulia> summary(m,true,true)\n\nMatch Summary\n═════════════════════════════════════════════\n\nSampel Sizes:\n       │    All    Matched    Unmatched\n───────│───────────────────────────────\nTreat  │    185    185        0\nControl│    429    185        244\n\n\n\nSummary of Balance for All Data:\nVar     │    Mean1        Mean2        P_Value\n────────│─────────────────────────────────────\ntreat   │    0.0          1.0          missing\nage     │    28.0303      25.8162      0.0029\neduc    │    10.2354      10.3459      0.5848\nmarried │    0.5128       0.1892       0.0\nnodegree│    0.5967       0.7081       0.007\nre74    │    5619.2365    2095.5737    0.0\nre75    │    2466.4844    1532.0553    0.0012\nre78    │    6984.1697    6349.1435    0.3491\nPS      │    0.185        0.5711       0.0\n\n\nSummary of Balance for Matched Data:\nVar     │    Mean1        Mean2        P_Value\n────────│─────────────────────────────────────\ntreat   │    0.0          1.0          missing\nage     │    24.5622      25.8162      0.1537 \neduc    │    10.1351      10.3459      0.3418\nmarried │    0.2919       0.1892       0.0208\nnodegree│    0.7568       0.7081       0.2918\nre74    │    1948.422     2095.5737    0.7488\nre75    │    1819.4709    1532.0553    0.3913\nre78    │    6458.5599    6349.1435    0.8863\nPS      │    0.5714       0.5711       0.9905\n\n\n\n\n\n","category":"function"},{"location":"AllFunctions/#MatchIt.NearestNeighbor","page":"All Functions","title":"MatchIt.NearestNeighbor","text":"NearestNeighbour(data::DataFrame,T::String,exact=String[],maxDist::Float64=Inf, replacement::Bool=true,order::String=\"data\", tolerance::Float64=-1.)\n\nPerforms Nearest Neighbor matching. Allows for exact matches on certain variables before performing the nearest neighbor search.\n\nArguments:\n\ndata::DataFrame: Needs to contain a treatment variable and the propensity score (:PS) (optionally the variables that need to be exactly matched)\nT::String: The name of the treatment indicator (0 or 1)\nexact::Vector{String}: A vector of the variable names used for exact matching.\nmaxDist::Float64: The maximum allowed distance between nearest neighbors (defaults to Inf)\nreplacement::Bool: Whether the matching should occure with or without replacement. Without replacement is much slower and the result depends on the row order. (defaults to true)\norder::String: In which order should the matching without replacement take place (defaults to \"data\"). Allows for:  \n\"data\": Follows the row order of the data  \n\"smallest\": Matches the smalles distances/propensity scores first  \n\"largest\": Matches the largest distances/propensity scores first  \n\"random\": Matches in a randomised order  \ntolerance::Float64: In matching with replacement it defines the minimum distance that is good enough and no better matches are searched for. (defaults to -1 meaning that all control observations are compared to each treatment observation)\n\nOutput:\n\nA DataFrame containg the matched sample. Includes all variables from the provided DataFrame plus the distance metric :dist\n\n\n\n\n\n","category":"function"},{"location":"AllFunctions/#MatchIt.balance_plot","page":"All Functions","title":"MatchIt.balance_plot","text":"balance_plot(df::MatchedIt,barmode=\"overlay\",logscale=false)\n\nCreates a plot with two histograms showing the balance of propensity scores before and after matching.\n\nArguments:\n\ndf::MatchedIt: The output of a function call to matchit\nbarmode: whehter the bars of the histogram should be overlayed (\"overlay\").\nlogscale::Bool: whether the yaxis should be printed on a log-scale (defaults to false)\n\nOutput\n\nA PlotlyJS.SyncPlot\n\n\n\n\n\n","category":"function"},{"location":"AllFunctions/#MatchIt.get_propensities!-Tuple{DataFrames.DataFrame, StatsModels.FormulaTerm, GLM.Link01}","page":"All Functions","title":"MatchIt.get_propensities!","text":"get_propensities!(data::DataFrame,T::String,X::Vector{String},link::GLM.Link01)\n\nCalculates the Propensity Scores and returns a DataFrame with a new column :PS.\n\nArguments:\n\ndata::DataFrame: The DataFrame containg the data. This should have no missing values. Rows with missing values will be deleted.\nT::String: the name of the treatment variable\nX::Vector{String}: the names of the covariates to be matched on\nlink::GLM.Link01: The link function used. One of LogitLink() or ProbitLink()\n\nOutput\n\nDataFrame containing the original data without missing values that has a new column (:PS) with the propensity scores. \n\n\n\n\n\n","category":"method"},{"location":"AllFunctions/#MatchIt.get_propensities-Tuple{DataFrames.DataFrame, StatsModels.FormulaTerm, GLM.Link01}","page":"All Functions","title":"MatchIt.get_propensities","text":"get_propensities(data::DataFrame,T::String,X::Vector{String},link::GLM.Link01)\n\nCalculates the Propensity Scores and returns a DataFrame with a new column :PS.\n\nArguments:\n\ndata::DataFrame: The DataFrame containg the data. This should have no missing values. Rows with missing values will be deleted.\nT::String: the name of the treatment variable\nX::Vector{String}: the names of the covariates to be matched on\nlink::GLM.Link01: The link function used. One of LogitLink() or ProbitLink()\n\nOutput\n\nDataFrame containing the original data without missing values that has a new column (:PS) with the propensity scores. \n\n\n\n\n\n","category":"method"},{"location":"AllFunctions/#MatchIt.matchit-Tuple{DataFrames.DataFrame, StatsModels.FormulaTerm}","page":"All Functions","title":"MatchIt.matchit","text":"matchit(df::DataFrame, f::FormulaTerm; link::GLM.Link01=LogitLink(), exact=[], maxDist::Float64=Inf,replacement::Bool=true,order::String=\"data\",tolerance::Float64=-1.)\n\nPerforms propensity score matching. Also allows for exact matching on certain variables. \n\nArguments:\n\ndf::DataFrame\nf::FormulaTerm::The formula used in the GLM regression. (use @formula() to create it)\nT::String: The name of the treatment variable (should be 0 or 1)\nX::Vector{String}: The names of the covariates that are used in the propensity score matching\nexact::Vector: The names of the variables that should be exactly matched. Defaults to no variables ([])\nlink::GLM.Link01: The link function used for the regression. Either LogitLink() (default) or ProbitLink()\nmaxDist: The maximum distance between matched treatment and control observations to be included in the sample (defaults to Inf)\nreplacement::Bool: Whether the matching should occure with or without replacement. Without replacement is much slower and the result depends on the row order. (defaults to true)\norder::String: In which order should the matching without replacement take place (defaults to \"data\"). Allows for:  \n\"data\": Follows the row order of the data  \n\"smallest\": Matches the smalles distances/propensity scores first  \n\"largest\": Matches the largest distances/propensity scores first  \n\"random\": Matches in a randomised order  \ntolerance::Float64: In matching with replacement this value defines the minimum distance that is good enough such that the search for better matches is halted. (defaults to -1 meaning that all control observations are compared to each treatment observation)\n\nOutput:\n\nReturns a MatchedIt struct. It contains:\n\ndf: the original DataFrame \nmatched: the matched DataFrame\nlink: the Link used (either LogitLink() or ProbitLink())\nf: the formula used in the matching process\nT: the name of the treatment indicator variable\n\nExample\n\nSimple nearest neighbor PSM matching with replacement.  \n\njulia> m = matchit(input_data, @formula(treat ~ age + educ + race + nodegree + re74 + re75))\n\nA MatchIt object:\nTreatmeant variable: treat\nMatching formula: treat ~ age + educ + race + nodegree + re74 + re75\nLink: LogitLink\nNumber of observations: 614 (original), 370 (matched)\n\nReturning the matched sample:  \n\njulia> m.matched\n370×12 DataFrame\n Row │ Column1  treat  age    educ   race     married  nodegree  re74      re75        ⋯\n     │ String7  Int64  Int64  Int64  String7  Int64    Int64     Float64   Float64     ⋯\n─────┼──────────────────────────────────────────────────────────────────────────────────\n   1 │ PSID368      0     40     11  black          1         1      0.0       0.0     ⋯\n   2 │ PSID202      0     20      9  hispan         1         1      0.0    1283.66     \n   3 │ PSID293      0     31     12  black          1         0      0.0      42.9677   \n   4 │ PSID196      0     18     11  black          0         1      0.0    1367.81     \n  ⋮  │    ⋮       ⋮      ⋮      ⋮       ⋮        ⋮        ⋮         ⋮          ⋮       ⋱\n 367 │ NSW182       1     25     14  black          1         0  35040.1   11536.6     ⋯\n 368 │ NSW183       1     35      9  black          1         1  13602.4   13830.6      \n 369 │ NSW184       1     35      8  black          1         1  13732.1   17976.2      \n 370 │ NSW185       1     33     11  black          1         1  14660.7   25142.2      \n                                                          3 columns and 362 rows omitted\n\n\n\n\n\n","category":"method"},{"location":"VersionChanges/","page":"Version Change Log","title":"Version Change Log","text":"info: v0.0.1\nChangesCreated base version of the package","category":"page"},{"location":"Matching/#Matching","page":"Matching","title":"Matching","text":"","category":"section"},{"location":"Matching/","page":"Matching","title":"Matching","text":"matchit","category":"page"},{"location":"Matching/#MatchIt.matchit","page":"Matching","title":"MatchIt.matchit","text":"matchit(df::DataFrame, f::FormulaTerm; link::GLM.Link01=LogitLink(), exact=[], maxDist::Float64=Inf,replacement::Bool=true,order::String=\"data\",tolerance::Float64=-1.)\n\nPerforms propensity score matching. Also allows for exact matching on certain variables. \n\nArguments:\n\ndf::DataFrame\nf::FormulaTerm::The formula used in the GLM regression. (use @formula() to create it)\nT::String: The name of the treatment variable (should be 0 or 1)\nX::Vector{String}: The names of the covariates that are used in the propensity score matching\nexact::Vector: The names of the variables that should be exactly matched. Defaults to no variables ([])\nlink::GLM.Link01: The link function used for the regression. Either LogitLink() (default) or ProbitLink()\nmaxDist: The maximum distance between matched treatment and control observations to be included in the sample (defaults to Inf)\nreplacement::Bool: Whether the matching should occure with or without replacement. Without replacement is much slower and the result depends on the row order. (defaults to true)\norder::String: In which order should the matching without replacement take place (defaults to \"data\"). Allows for:  \n\"data\": Follows the row order of the data  \n\"smallest\": Matches the smalles distances/propensity scores first  \n\"largest\": Matches the largest distances/propensity scores first  \n\"random\": Matches in a randomised order  \ntolerance::Float64: In matching with replacement this value defines the minimum distance that is good enough such that the search for better matches is halted. (defaults to -1 meaning that all control observations are compared to each treatment observation)\n\nOutput:\n\nReturns a MatchedIt struct. It contains:\n\ndf: the original DataFrame \nmatched: the matched DataFrame\nlink: the Link used (either LogitLink() or ProbitLink())\nf: the formula used in the matching process\nT: the name of the treatment indicator variable\n\nExample\n\nSimple nearest neighbor PSM matching with replacement.  \n\njulia> m = matchit(input_data, @formula(treat ~ age + educ + race + nodegree + re74 + re75))\n\nA MatchIt object:\nTreatmeant variable: treat\nMatching formula: treat ~ age + educ + race + nodegree + re74 + re75\nLink: LogitLink\nNumber of observations: 614 (original), 370 (matched)\n\nReturning the matched sample:  \n\njulia> m.matched\n370×12 DataFrame\n Row │ Column1  treat  age    educ   race     married  nodegree  re74      re75        ⋯\n     │ String7  Int64  Int64  Int64  String7  Int64    Int64     Float64   Float64     ⋯\n─────┼──────────────────────────────────────────────────────────────────────────────────\n   1 │ PSID368      0     40     11  black          1         1      0.0       0.0     ⋯\n   2 │ PSID202      0     20      9  hispan         1         1      0.0    1283.66     \n   3 │ PSID293      0     31     12  black          1         0      0.0      42.9677   \n   4 │ PSID196      0     18     11  black          0         1      0.0    1367.81     \n  ⋮  │    ⋮       ⋮      ⋮      ⋮       ⋮        ⋮        ⋮         ⋮          ⋮       ⋱\n 367 │ NSW182       1     25     14  black          1         0  35040.1   11536.6     ⋯\n 368 │ NSW183       1     35      9  black          1         1  13602.4   13830.6      \n 369 │ NSW184       1     35      8  black          1         1  13732.1   17976.2      \n 370 │ NSW185       1     33     11  black          1         1  14660.7   25142.2      \n                                                          3 columns and 362 rows omitted\n\n\n\n\n\n","category":"function"},{"location":"Matching/#View-the-matching-summary:","page":"Matching","title":"View the matching summary:","text":"","category":"section"},{"location":"Matching/","page":"Matching","title":"Matching","text":"summary(::MatchedIt,::Bool,::Bool)","category":"page"},{"location":"Matching/#Base.summary-Tuple{MatchedIt, Bool, Bool}","page":"Matching","title":"Base.summary","text":"Base.summary(obj::MatchedIt,test::Bool=false,pre::Bool=false)\n\nGives a summary output for the matched sample.   The output includes:\n\nA summary of the number of observations matched \nA table of the means of all variables in the original and matched dataframe split into treatment and control group. \nIf test=true a p-value of a 2 sample Welch test is reported for each variable used in the matching.\n\nArguments:\n\nobj::MatchedIt: The output from a call to matchit\ntest::Bool: Whether a difference in mean test (2 sample Welch test) should be performed between treatment and control observations. (defaults to false)\npre::Bool: Whether to also show the output of the means and T-tests for the sample before matching.\n\nExample\n\njulia> m = matchit(input_data, @formula(treat ~ age + educ + race + nodegree + re74 + re75));\n\njulia> summary(m,true,true)\n\nMatch Summary\n═════════════════════════════════════════════\n\nSampel Sizes:\n       │    All    Matched    Unmatched\n───────│───────────────────────────────\nTreat  │    185    185        0\nControl│    429    185        244\n\n\n\nSummary of Balance for All Data:\nVar     │    Mean1        Mean2        P_Value\n────────│─────────────────────────────────────\ntreat   │    0.0          1.0          missing\nage     │    28.0303      25.8162      0.0029\neduc    │    10.2354      10.3459      0.5848\nmarried │    0.5128       0.1892       0.0\nnodegree│    0.5967       0.7081       0.007\nre74    │    5619.2365    2095.5737    0.0\nre75    │    2466.4844    1532.0553    0.0012\nre78    │    6984.1697    6349.1435    0.3491\nPS      │    0.185        0.5711       0.0\n\n\nSummary of Balance for Matched Data:\nVar     │    Mean1        Mean2        P_Value\n────────│─────────────────────────────────────\ntreat   │    0.0          1.0          missing\nage     │    24.5622      25.8162      0.1537 \neduc    │    10.1351      10.3459      0.3418\nmarried │    0.2919       0.1892       0.0208\nnodegree│    0.7568       0.7081       0.2918\nre74    │    1948.422     2095.5737    0.7488\nre75    │    1819.4709    1532.0553    0.3913\nre78    │    6458.5599    6349.1435    0.8863\nPS      │    0.5714       0.5711       0.9905\n\n\n\n\n\n","category":"method"},{"location":"Matching/#Propensity-Score-Balance-Plot:","page":"Matching","title":"Propensity Score Balance Plot:","text":"","category":"section"},{"location":"Matching/","page":"Matching","title":"Matching","text":"balance_plot","category":"page"},{"location":"Matching/#MatchIt.balance_plot","page":"Matching","title":"MatchIt.balance_plot","text":"balance_plot(df::MatchedIt,barmode=\"overlay\",logscale=false)\n\nCreates a plot with two histograms showing the balance of propensity scores before and after matching.\n\nArguments:\n\ndf::MatchedIt: The output of a function call to matchit\nbarmode: whehter the bars of the histogram should be overlayed (\"overlay\").\nlogscale::Bool: whether the yaxis should be printed on a log-scale (defaults to false)\n\nOutput\n\nA PlotlyJS.SyncPlot\n\n\n\n\n\n","category":"function"},{"location":"#MatchIt.jl","page":"Home","title":"MatchIt.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"GitHub Repo: https://github.com/eohne/MatchIt.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"Performs Propensity Score Matching in pure Julia. The package is somewhat inspired by the R MatchIt package.   The current implementation allows propsensity scores to be calculated using both Logistic and Probit regressions.   The package implements one-to-one nearest neighbor matching with and without replacement.  ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Matching with replacement uses KDTrees from the NearestNeighbor.jl package. \nMatching without replacement loops through (all) potential matches and is therefore slow.  ","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package further allows for matching exactly on some covariates (e.g. match to the closest propensity score conditional on the two observations being from the same Firm and date).","category":"page"},{"location":"","page":"Home","title":"Home","text":"The currently implemented functionality has been crosschecked with the lalonda.csv test data from the R MatchIt package and matches the output of the R package.  ","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You can manually install it by: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pkg.clone(\"https://github.com/eohne/MatchIt.jl\")","category":"page"}]
}
